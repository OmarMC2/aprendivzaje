---
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } = Astro.props;
---

<html lang="es">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      .post-header {
        text-align: center;
        margin-bottom: 2em;
      }
      .post-header h1 {
        font-size: 3em;
        margin-bottom: 0.5em;
        line-height: 1.2;
      }
      .post-meta {
        color: var(--text-secondary);
        font-size: 0.9em;
      }
      .hero-image {
        margin-bottom: 3em;
      }
      .hero-image img {
        width: 100%;
        height: auto;
        border-radius: 12px;
        box-shadow: var(--box-shadow);
      }
      .prose {
        /* Styles for the article content are in global.css */
        /* This class is here for semantic purposes */
      }

      .tags {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
        margin-top: 1rem;
      }

      .tag {
        background-color: var(--accent-gradient);
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 12px;
        text-decoration: none;
        font-size: 0.9em;
      }

      @media (max-width: 720px) {
        .post-header h1 {
          font-size: 2.5em;
        }
      }
    </style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <header class="post-header">
          <h1>{title}</h1>
          <div class="post-meta">
            <FormattedDate date={pubDate} />
            {updatedDate && (
              <span>
                {' | Actualizado: '}
                <FormattedDate date={updatedDate} />
              </span>
            )}
          </div>
          {tags && tags.length > 0 && (
            <div class="tags">
              {tags.map(tag => (
                <a href={`/tags/${tag}`} class="tag">{tag}</a>
              ))}
            </div>
          )}
        </header>

        {heroImage && (
          <div class="hero-image">
            <Image width={1020} height={510} src={heroImage} alt={`Imagen de portada para ${title}`} />
          </div>
        )}

        <div class="prose">
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
